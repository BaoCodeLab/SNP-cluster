library(mgcv)

cat("reading data","\n")
args=commandArgs()

sweep_lg=read.table("recomb.txt",header = FALSE,sep = "\t")
names(sweep_lg)<-c("sweep_lg","cluster_num","max_cluster_size","min_cluster_size","avg_cluster_size")
sweep_lg<-sweep_lg[order(sweep_lg$sweep_lg),]

write.table(sweep_lg,file = "sweep_lg_result.txt",sep = "\t",quote=FALSE,row.names=FALSE)
cat("Several different models were used for fitting","\n")

fit1=gam(cluster_num~s(sweep_lg),data=sweep_lg)
fit2=gam(cluster_num~te(sweep_lg),data=sweep_lg)
fit3=gam(cluster_num~ti(sweep_lg),data=sweep_lg)
fit4=gam(cluster_num~t2(sweep_lg),data=sweep_lg)
fit5=lm(cluster_num~sweep_lg,data = sweep_lg)

cat("Extract R-adjust for different models","\n")

fit1_rsq=summary(fit1)$r.sq
fit2_rsq=summary(fit2)$r.sq
fit3_rsq=summary(fit3)$r.sq
fit4_rsq=summary(fit4)$r.sq
fit5_rsq=summary(fit5)$r.sq

cat("the R-adjust of gam(cluster_num~s(sweep_lg)) is",fit1_rsq,"\n")
cat("the R-adjust of gam(cluster_num~te(sweep_lg)) is",fit2_rsq,"\n")
cat("the R-adjust of gam(cluster_num~ti(sweep_lg)) is",fit3_rsq,"\n")
cat("the R-adjust of gam(cluster_num~t2(sweep_lg)) is",fit4_rsq,"\n")
cat("the R-adjust of lm(cluster_num~(sweep_lg)) is",fit5_rsq,"\n")

cat("Compare the R-adjust of the models to select the model with the largest R-adjust","\n")

fit_array=c(fit1_rsq,fit2_rsq,fit3_rsq,fit4_rsq,fit5_rsq)
index=which.max(fit_array)[1]
if(index==1) {fit=fit1; cat("so choose the modle--gam(cluster_num~s(sweep_lg))","\n")}
if(index==2) {fit=fit2; cat("so choose the modle--gam(cluster_num~te(sweep_lg))","\n")}
if(index==3) {fit=fit3; cat("so choose the modle--gam(cluster_num~ti(sweep_lg))","\n")}
if(index==4) {fit=fit4; cat("so choose the modle--gam(cluster_num~t2(sweep_lg))","\n")}
if(index==5) {fit=fit5; cat("so choose the modle--lm(cluster_num~(sweep_lg))","\n")}
coeff=coef(fit)

plot(sweep_lg$sweep_lg,sweep_lg$cluster_num,main = "the sweep length for cluster_number",sub ="Figure 1",xlab = "sweep length",ylab="cluster num",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)
plot(fit,main = "the Generalized additive models",col="red",lwd=1,xlab = "sweep length",ylab = "s(sweep length)",sub="Figure 2",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)
plot(sweep_lg$sweep_lg,sweep_lg$cluster_num,main = "the sweep length for cluster_number",sub ="Figure 3",xlab = "sweep length",ylab="cluster number",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)
lines(sweep_lg$sweep_lg,predict(fit),col="red",lwd=2)

#first-order derivative
interv=as.numeric(args[6])
testdata=data.frame(sweep_lg=seq(length=5000,from=100,to=10000))
y0 <- predict(fit,testdata,type="lpmatrix")
y1 <- predict(fit,testdata+interv,type="lpmatrix")
yp <- (y1-y0)/interv
diff1 <- yp %*% coeff
plot(testdata$sweep_lg,diff1,main = "First-order derivative",xlab = "sweep length",ylab = "1st-order derivative",sub = "Figure 4",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)

#second-order derivative
y2 <- predict(fit,testdata-interv,type="lpmatrix")
ypp <- (y2+y1-2*y0)/interv^2
diff2 <- ypp %*% coeff
plot(testdata$sweep_lg,diff2,ylim = c(-0.002,0.002),main = "Second-order derivative",xlab = "sweep length",ylab = "2nd-order derivative",sub = "Figure 5",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)

#curvature
curv <-  diff2/((1+diff1^2)^1.5)
max_index <- which.max(curv)
curv=as.data.frame(curv)
names(curv)="curv"
testdata$curv=curv$curv
cat("The maximum curvature corresponds to the sweep_lg is:",max_index,"\n")
plot(x=testdata$sweep_lg,y=testdata$curv,xlab = "sweep length",ylab = "Curvature",sub = "Figure 6",cex.lab=1.5,mgp=c(2,0.5,0),cex.axis=1.2)

sink("Rscript_log.txt",append=FALSE,split=TRUE)
cat("input different recombination length toget different cluster numbers and draw a scatter diagram--Figure 1,where recombination length is the independent variable and cluster numbers is the dependent variable","\n")
cat("The generalized additive model was used to fit the data and plot--Figure 2","\n")
cat("The curve of generalized additive model is fitted to figure 1--Figure 3","\n")
cat("In order to calculate the first and second derivatives of generalized additive model by finite difference method,5000 recombination lengths ranging from 100 to 10000 are randomly generated first,Then the generalized additive model is used to predict the corresponding cluster Numbers","\n")
cat("interval=1e-3","\n")
cat("the first derivative of generalized additive model is shown in Figure 4","\n")
cat("The second derivative of generalized additive model is shown in Figure 5","\n")
cat("The curvature of the generalized additive model is shown in Figure 6","\n"")
sink()
